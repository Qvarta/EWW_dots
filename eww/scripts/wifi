#!/bin/bash
source $HOME/.config/eww/var.conf

wifi_info(){
  local icon="$(wifi_icon)"
  local ssid="$(wifi_ssid)"
  local status=`nmcli radio wifi`
  local json="{\"icon\": \"$icon\", \"ssid\": \"$ssid\", \"status\": \"$status\"}"
  echo "$json" | jq -r .
}
wifi_icon() {
  local strength=$(iwconfig $SET_WIFI | grep "Link Quality=" | awk -F'=' '{ print $2 }' | awk -F'/' '{ print $1 }')
  local wf=$(echo "$strength*100/70" | bc)
  wf=${wf%.*}
  if [ $wf -ge 1 ] && [ $wf -le 30 ]; then
    echo "󰤟 "
  elif [ $wf -ge 31 ] && [ $wf -le 60 ]; then
    echo "󰤢 "
  elif [ $wf -ge 61 ] && [ $wf -le 100 ]; then
    echo "󰤨 "
  else
    echo "󰤭 "
  fi
}
wifi_ssid() {
  local is_blocked=`iwconfig $SET_WIFI | grep -oP 'Tx-Power=\K([^ ]+)'| xargs`
  local state=`iwconfig $SET_WIFI | grep ESSID | awk -F':' '{ print $2 }' | xargs`

  if [[ $is_blocked == "off" ]]; then
    echo "off"
  elif [[ $state == "off/any" ]]; then
    echo "on"
  else
    iwconfig $SET_WIFI | grep ESSID | awk -F'"' '{ print $2 }'
  fi
}
get_wifi_list() {
  local json=$(nmcli -t -f SSID,SIGNAL device wifi list | awk -F: '{printf "{\"ssid\":\"%s\",\"signal\":\"%s\"},",$1,$2}')
  json="[${json%?}]"
  echo "$json" | jq 'map(select(.ssid != ""))' | jq -r . 
}
connect_wifi(){
    if nmcli device wifi connect $1 password $2 &> /dev/null; then
        notify-send  "Сonnected" -i $HOME/.config/eww/images/ui/wifi.png
    else
        notify-send  "Error: Invalid password" -i $HOME/.config/eww/images/ui/error.png
    fi
}

case "$1" in
  "info")
    wifi_info
    ;;
  "toggle")
    rfkill toggle wifi
    ;;
  "scan")
    get_wifi_list
    ;;
  "connect")
    connect_wifi $2 $3
    ;;
esac