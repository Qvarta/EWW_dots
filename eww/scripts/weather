#!/bin/bash
source $HOME/.config/eww/var.conf

file="$HOME/.config/eww/jsons/weather_codes.json"

city=$SET_CITY
api_key=$SET_API_key

if [[ $SET_LANG == 'RU' ]]; then
    language='ru-ru'
else
    language='en-en'
fi


URL="http://dataservice.accuweather.com/forecasts/v1/daily/5day/${city}?apikey=${api_key}&language=${language}&details=true&metric=true"

headers='User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'

icons_json=$(cat $file | jq -r '.codes')

get_json() {
    response=$(curl -s -H "${headers}" "${URL}")

    if [ $? -eq 0 ]; then
        create_new_json "${response}"
    else
        exit 1
    fi
}

create_new_json() {
    in_data="${1}"
    out_data=()
    number=0
    while read -r line; do
        date_raw=$(echo "${line}" | jq -r '.Date' | cut -d'T' -f1)
        date=$(date -d "${date_raw}" '+%d.%m')
        ((number++))
        prec=$(echo "${line}" | jq -r '.Day.PrecipitationProbability' | sed 's/null/0/g' | awk '{printf("%.0f%%\n", $1)}')
        
        if [[ $SET_LANG == "RU" ]]; then
            wind_speed=$(echo "${line}" | jq -r '.Day.Wind.Speed.Value' | awk '{printf("%.1f м/с\n", $1 / 3.6)}')
            wind_dir=$(echo "${line}" | jq -r '.Day.Wind.Direction.Localized')
        else
            wind_speed=$(echo "${line}" | jq -r '.Day.Wind.Speed.Value' | awk '{printf("%.1f m/s\n", $1 / 3.6)}')
            wind_dir=$(echo "${line}" | jq -r '.Day.Wind.Direction.English')
        fi

        temp_max=$(echo "${line}" | jq -r '.Temperature.Maximum.Value' | awk '{printf("%.1f\n", $1)}')
        temp_min=$(echo "${line}" | jq -r '.Temperature.Minimum.Value' | awk '{printf("%.1f\n", $1)}')
        icon=$(echo "${line}" | jq -r '.Day.Icon')
        
        icon_value=$(echo "${icons_json}" | jq -r '.["'"$icon"'"][0]')

        if [[ $SET_LANG == "RU" ]]; then
            icon_phrase=$(echo "${icons_json}" | jq -r '.["'"$icon"'"][1]')
        else 
            icon_phrase=$(echo "${icons_json}" | jq -r '.["'"$icon"'"][2]')
        fi

        new_entry=$(jq -n \
        --arg num "$number" \
        --arg date "$date" \
        --arg prec "$prec" \
        --arg wind_speed "$wind_speed" \
        --arg wind_dir "$wind_dir" \
        --arg temp_max "$temp_max" \
        --arg temp_min "$temp_min" \
        --arg icon "$icon_value" \
        --arg icon_phrase "$icon_phrase" \
        '{"num":$num,"date":$date,"prec":$prec,"wind_speed":$wind_speed,"wind_dir":$wind_dir,"temp_max":$temp_max,"temp_min":$temp_min,"icon":$icon,"icon_phrase":$icon_phrase}')
        out_data+=("$new_entry")

    done <<< "$(echo "${in_data}" | jq -c '.DailyForecasts[]')"
    echo '['$(IFS=,; echo "${out_data[*]}")']'
}

get_json