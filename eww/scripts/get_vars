#!/bin/bash
source $HOME/.config/eww/var.conf

get_vars(){
    local lang=$(echo $SET_LANG)
    local battery=$(echo $SET_BAT)
    local max_brightness=$(brightnessctl | grep Max | awk '{print $3}')
    local sensor=$(echo $SET_SENSOR)
    local scr_path=$(echo $SET_SCR)
    # local kernel=$(echo "$(hostnamectl --json=pretty | jq .KernelRelease  | sed 's/"//g')")
    # local user=$(echo "$(whoami)")

    local json="{\"user\": \"$user\", \"kernel\": \"$kernel\", \"lang\": \"$lang\", \"battery\": \"$battery\", \"max_brightness\": \"$max_brightness\", \"sensor\": \"$sensor\", \"scr_path\": \"$scr_path\"}"
    echo "$json" | jq -r .
}
get_srings(){
    local lang=$(echo $SET_LANG)
    local file="$HOME/.config/eww/jsons/string.json"

    if [ "$lang" == "EN" ]; then
        jq -r '.stings | to_entries | map({(.key): .value[0]}) | add' "$file"
    elif [ "$lang" == "RU" ]; then
        jq -r '.stings | to_entries | map({(.key): .value[1]}) | add' "$file"
    fi
}
scroll(){
    if [[ $1 == 'up' ]]; then
        eww update cDay=$([[ $2 != $3 ]] && echo $(($2 + 1)) || echo 1)
    elif [[ $1 == 'down' ]]; then
        eww update cDay=$([[ $2 != 1 ]] && echo $(($2 - 1)) || echo $3)
    fi
}
case $1 in
    vars)
        get_vars
        ;;
    strings)
        get_srings
        ;;
    scroll)
        shift
        scroll "$@"
        ;;
esac

