; ---------------------------------------------------------------------------
;                               WEATHER WIDGET
; ---------------------------------------------------------------------------
(defwidget weather[visible]
  (box
    :class "block weather"
    :orientation "v"
    :space-evenly false
    :valign "center"
    :height 130
    (eventbox
      :visible {visible}
      :onscroll "${EWW_CMD} update weather_rev=${!weather_rev}"
      :vexpand true
      (overlay
        (current_day :current {weather_json[0]})
        (current_day :current {weather_json[1]})
        (current_day :current {weather_json[2]})
        (current_day :current {weather_json[3]})
        (current_day :current {weather_json[4]})
        (forecast)
      )
    )
    (box
      :visible {!visible}
      :space-evenly false
      :halign "center"
      :spacing 20
      (label :text " " :class "largeIcon")
      (label :text "${strings.unavailable}" :class "mediumText")
    )
  )
)
(defwidget current_day[current]
  (revealer 
    :transition "crossfade" 
    :reveal "${cDay == current.num && weather_rev ? 'true' : 'false'}"
    :duration "500ms"
    (overlay
      (box
        :space-evenly false
        :spacing 15
        :style "margin-left:10px;"
        :valign "center"
        (box
          :orientation "v"
          :space-evenly false
          (label :text "${current.icon}" :class "largeIcon")
          (label :text "${current.temp_max}" :class "largeText")
        )
        (box
          :orientation "v"
          :valign "center"
          (box
            :halign "start"
            :space-evenly false
            (label :text "${current.icon_phrase}" :halign "start" :class "mediumText")
          )
          (box
            :space-evenly false
            :halign "start"
            :spacing 10
            (label :text "${strings.probability}:" :class "mediumText")
            (label :text "${current.prec}" :class "mediumText")
          )
          (box
            :space-evenly false
            :halign "start"
            :spacing 10
            (label :text "${strings.wind}:")
            (label :text "${current.wind_speed} 󱗺 ${current.wind_dir}")
          )
        )
      )
      (label :text "${current.date}" :halign "end" :valign "start" :class "overlayText smallText")
    )
  )
)

(defwidget forecast[]
  (revealer :transition "crossfade" :reveal {!weather_rev} :duration "500ms"
    (box
      :spacing 5
      (for entry in weather_json
        (day :date {entry.date} :icon {entry.icon} :tmax {entry.temp_max} :tmin {entry.temp_min} :number {entry.num})
      )
    )
  )
)

(defwidget day[date icon tmax tmin number]
  (eventbox
    :onclick "${EWW_CMD} update cDay=${number} && ${EWW_CMD} update weather_rev=${!weather_rev}"
    :class "day"
    (box
      :orientation "v"
      :spacing 5
      :space-evenly false
      (label :class "overlayText smallText" :text date)
      (label :class "mediumIcon" :text icon)
      (label :class "smallText" :text tmax)
    )
  )
)