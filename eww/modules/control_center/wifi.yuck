
(defwidget net_list[]
  (box
    :class "wifiList sub_container"
    :space-evenly false
    :orientation "v"
    (scroll
      :height 140
      :vscroll true
      :scrollspeed "24px"
      :class "scroll"
      (box
        :space-evenly false
        :orientation "v"
        :spacing 10
        (for entry in list_net
          (eventbox
            :class "button"
            :cursor "pointer"
            :onclick "${EWW_CMD} open connect_network --arg ssid=${entry.ssid} && ./scripts/wifi/wifiInfo disconnect"
            (box
              :class "entry"
              :space-evenly false
              (label :text "${substring(entry.ssid, 0, 20)}" :class "text")
              (label :text "" :hexpand true)
              (label :text "${entry.signal}" :class "text")
            )
          )
        )
      )
    )
    (eventbox
      :class "button2"
      :cursor "pointer"
      :space-evenly false
      :onclick "${EWW_CMD} update numButtons=0"
      (label :class "text" :text "󰜱 ")
    )
  )
)
(defwindow connect_network [ssid]
  :monitor "0"
  :namespace "control-center"
  :geometry (geometry
    :width "300px"
    :height "30px"
  :anchor "center")
  :focusable "true"
  (connect :ssid ssid)
)
(defwidget connect[ssid]
  (box
    :class "main_container connect"
    :orientation "v"
    :space-evenly false
    :spacing 10
    (box
      :space-evenly false
      :spacing 5
      :height 40
      (eventbox
        :class "btnLeft"
        :cursor "pointer"
        :width 50
        :onclick "${EWW_CMD} update password=${!password}"
        (label  :class "text" :text {password ? "󰛑 " : "󰛐 "})
      )
      (input
        :password {password}
        :class "input"
        :hexpand true
        :onaccept "${EWW_CMD} close connect_network && ${EWW_CMD} update numButtons=0 && scripts/wifi/wifiInfo connect ${ssid} {}"
      )
    )
    (eventbox
      :class "btnBack"
      :cursor "pointer"
      :width 20
      :onclick "${EWW_CMD} update numButtons=0 && ${EWW_CMD} close connect_network"
      (label  :class "text" :text "󰜱 ")
    )
  )
)