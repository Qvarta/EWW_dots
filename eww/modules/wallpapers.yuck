(defwidget Wallpapers[]
  (box
    :class "bg"
    :space-evenly false
    :orientation "v"
    :spacing 10
    (titleWallpapers)
    (scroll
      :hexpand true
      :vexpand true
      :vscroll true
      (box
        :orientation "v"
        :spacing 10
        (for entry in bg_list
          (createLine :list {entry})
        )
      )
    )
    (downWallpapers)
  )
)
(defwidget createLine[list]
  (box
    (for item in list
      (imgBG
        :style {item.style}
        :path {item.path}
      )
    )
  )
)
(defwidget imgBG [path style]
  (eventbox
    :onclick "./scripts/background set ${path} ${usePywal ? 'pywal' : ''}"
    :onrightclick "${EWW_CMD} update popUp_rev=${!popUp_rev}"
    :timeout "5s"
    :class "imgBtn"
    :cursor "pointer"
    (box
      :class "imgContainer"
      (overlay
        (box
          :class "img"
          :style style
        )
        (revealer :transition "crossfade" :reveal {popUp_rev} :duration "500ms"
          (eventbox
            :class "btn"
            :onclick "./scripts/background delete ${path} & ${EWW_CMD} update popUp_rev=${!popUp_rev}"
            (label :class "btnText red" :text "󱎘")
          )
        )
      )
    )
  )
)
(defwidget titleWallpapers[]
  (box
    :space-evenly false
    :height 40
    (eventbox
      :onclick "${EWW_CMD} update numCC=1"
      :class "titleLeft dark"
      :cursor "pointer"
      :width 40
      (label :class "iconArrow" :text "")
    )
    (box
      :class "titleRight"
      :hexpand true
      :space-evenly false
      (label
        :class "wallLbl"
        :hexpand true
        :halign "center"
        :text {strings.wallpapers}
      )
    )
    (eventbox
      :onclick "${EWW_CMD} update numCC=0"
      :class "btnRight dark"
      :cursor "pointer"
      :width 40
      (label :class "iconArrow" :text "")
    )
  )
)
(defwidget downWallpapers[]
  (box
    :class "checkContaner"
    :height 40
    :space-evenly false
    :spacing 10
    (eventbox
      :class "check"
      :cursor "pointer"
      :onclick "${EWW_CMD} update usePywal=${!usePywal}"
      :width 40
      :height 40
      (box
        (label :text {usePywal ? " " : " "} :class "wallLbl")
      )
    )
    (label :text "Pywal" :class "wallLbl" :hexpand true :xalign -1)
  )
)